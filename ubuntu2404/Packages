Package: libgtsam-notbb-dev
Version: 4.2.0
Architecture: amd64
Maintainer: Frank Dellaert, dellaert@cc.gatech.edu
Installed-Size: 32018
Depends: libboost-dev (>= 1.65)
Filename: ./libgtsam-notbb-dev_4.2.0_amd64.deb
Size: 4073474
MD5sum: ee89fffe114796e9c7c2f6ed1434be2c
SHA1: d5e163b2ed0df61637ee0684aa2561b51d8b2d03
SHA256: 76ef8e69eebddae9c248dc9b2e31e7f11fc27400b0b50d77703ffdfca8771737
Section: devel
Priority: optional
Description: GTSAM
 # README - Georgia Tech Smoothing and Mapping Library
 .
 **Important Note**
 .
 As of Dec 2021, the `develop` branch is officially in &quot;Pre 4.2&quot; mode. A great new feature we will be adding in 4.2 is *hybrid inference* a la DCSLAM (Kevin Doherty et al) and we envision several API-breaking changes will happen in the discrete folder.
 .
 In addition, features deprecated in 4.1 will be removed. Please use the last [4.1.1 release](https://github.com/borglab/gtsam/releases/tag/4.1.1) if you need those features. However, most (not all, unfortunately) are easily converted and can be tracked down (in 4.1.1) by disabling the cmake flag `GTSAM_ALLOW_DEPRECATED_SINCE_V42`.
 .
 ## What is GTSAM?
 .
 GTSAM is a C++ library that implements smoothing and
 mapping (SAM) in robotics and vision, using Factor Graphs and Bayes
 Networks as the underlying computing paradigm rather than sparse
 matrices.
 .
 The current support matrix is:
 .
 | Platform     | Compiler  | Build Status  |
 |:------------:|:---------:|:-------------:|
 | Ubuntu 18.04 | gcc/clang | ![Linux CI](https://github.com/borglab/gtsam/workflows/Linux%20CI/badge.svg) |
 | macOS        | clang     | ![macOS CI](https://github.com/borglab/gtsam/workflows/macOS%20CI/badge.svg) |
 | Windows      | MSVC      | ![Windows CI](https://github.com/borglab/gtsam/workflows/Windows%20CI/badge.svg) |
 .
 .
 On top of the C++ library, GTSAM includes [wrappers for MATLAB &amp; Python](#wrappers).
 .
 .
 ## Quickstart
 .
 In the root library folder execute:
 .
 ```sh
 #!bash
 mkdir build
 cd build
 cmake ..
 make check (optional, runs unit tests)
 make install
 ```
 .
 Prerequisites:
 .
 - [Boost](http://www.boost.org/users/download/) &gt;= 1.65 (Ubuntu: `sudo apt-get install libboost-all-dev`)
 - [CMake](http://www.cmake.org/cmake/resources/software.html) &gt;= 3.0 (Ubuntu: `sudo apt-get install cmake`)
 - A modern compiler, i.e., at least gcc 4.7.3 on Linux.
 .
 Optional prerequisites - used automatically if findable by CMake:
 .
 - [Intel Threaded Building Blocks (TBB)](http://www.threadingbuildingblocks.org/) (Ubuntu: `sudo apt-get install libtbb-dev`)
 - [Intel Math Kernel Library (MKL)](http://software.intel.com/en-us/intel-mkl) (Ubuntu: [installing using APT](https://software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo))
     - See [INSTALL.md](INSTALL.md) for more installation information
     - Note that MKL may not provide a speedup in all cases. Make sure to benchmark your problem with and without MKL.
 .
 ## GTSAM 4 Compatibility
 .
 GTSAM 4 introduces several new features, most notably Expressions and a Python toolbox. It also introduces traits, a C++ technique that allows optimizing with non-GTSAM types. That opens the door to retiring geometric types such as Point2 and Point3 to pure Eigen types, which we also do. A significant change which will not trigger a compile error is that zero-initializing of Point2 and Point3 is deprecated, so please be aware that this might render functions using their default constructor incorrect.
 .
  There is a flag `GTSAM_ALLOW_DEPRECATED_SINCE_V42` for newly deprecated methods since the 4.2 release, which is on by default, allowing anyone to just pull version 4.2 and compile.
 .
 .
 ## Wrappers
 .
 We provide support for [MATLAB](matlab/README.md) and [Python](python/README.md) wrappers for GTSAM. Please refer to the linked documents for more details.
 .
 ## Citation
 .
 If you are using GTSAM for academic work, please use the following citation:
 .
 ```bibtex
 @software{gtsam,
   author       = {Frank Dellaert and GTSAM Contributors},
   title        = {borglab/gtsam},
   month        = May,
   year         = 2022,
   publisher    = {Georgia Tech Borg Lab},
   version      = {4.2a8},
   doi          = {10.5281/zenodo.5794541},
   url          = {https://github.com/borglab/gtsam)}}
 }
 ```
 .
 To cite the `Factor Graphs for Robot Perception` book, please use:
 ```bibtex
 @book{factor_graphs_for_robot_perception,
     author={Frank Dellaert and Michael Kaess},
     year={2017},
     title={Factor Graphs for Robot Perception},
     publisher={Foundations and Trends in Robotics, Vol. 6},
     url={http://www.cs.cmu.edu/~kaess/pub/Dellaert17fnt.pdf}
 }
 ```
 .
 If you are using the IMU preintegration scheme, please cite:
 ```bibtex
 @book{imu_preintegration,
     author={Christian Forster and Luca Carlone and Frank Dellaert and Davide Scaramuzza},
     title={IMU preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation},
     year={2015}
 }
 ```
 .
 .
 ## The Preintegrated IMU Factor
 .
 GTSAM includes a state of the art IMU handling scheme based on
 .
 - Todd Lupton and Salah Sukkarieh, _&quot;Visual-Inertial-Aided Navigation for High-Dynamic Motion in Built Environments Without Initial Conditions&quot;_, TRO, 28(1):61-76, 2012. [[link]](https://ieeexplore.ieee.org/document/6092505)
 .
 Our implementation improves on this using integration on the manifold, as detailed in
 .
 - Luca Carlone, Zsolt Kira, Chris Beall, Vadim Indelman, and Frank Dellaert, _&quot;Eliminating conditionally independent sets in factor graphs: a unifying perspective based on smart factors&quot;_, Int. Conf. on Robotics and Automation (ICRA), 2014. [[link]](https://ieeexplore.ieee.org/abstract/document/6907483)
 - Christian Forster, Luca Carlone, Frank Dellaert, and Davide Scaramuzza, _&quot;IMU Preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation&quot;_, Robotics: Science and Systems (RSS), 2015. [[link]](http://www.roboticsproceedings.org/rss11/p06.pdf)
 .
 If you are using the factor in academic work, please cite the publications above.
 .
 In GTSAM 4 a new and more efficient implementation, based on integrating on the NavState tangent space and detailed in [this document](doc/ImuFactor.pdf), is enabled by default. To switch to the RSS 2015 version, set the flag `GTSAM_TANGENT_PREINTEGRATION` to OFF.
 .
 .
 ## Additional Information
 .
 There is a [`GTSAM users Google group`](https://groups.google.com/forum/#!forum/gtsam-users) for general discussion.
 .
 Read about important [`GTSAM-Concepts`](GTSAM-Concepts.md) here. A primer on GTSAM Expressions,
 which support (superfast) automatic differentiation,
 can be found on the [GTSAM wiki on BitBucket](https://bitbucket.org/gtborg/gtsam/wiki/Home).
 .
 See the [`INSTALL`](INSTALL.md) file for more detailed installation instructions.
 .
 GTSAM is open source under the BSD license, see the [`LICENSE`](LICENSE) and [`LICENSE.BSD`](LICENSE.BSD) files.
 .
 Please see the [`examples/`](examples) directory and the [`USAGE`](USAGE.md) file for examples on how to use GTSAM.
 .
 GTSAM was developed in the lab of [Frank Dellaert](http://www.cc.gatech.edu/~dellaert) at the [Georgia Institute of Technology](http://www.gatech.edu), with the help of many contributors over the years, see [THANKS](THANKS.md).

Package: libgtsam-notbb-dev
Version: 4.2.0
Architecture: arm64
Maintainer: Frank Dellaert, dellaert@cc.gatech.edu
Installed-Size: 30367
Depends: libboost-dev (>= 1.65)
Filename: ./libgtsam-notbb-dev_4.2.0_arm64.deb
Size: 3866280
MD5sum: 5ee060d916787959333b9aeebc013bd2
SHA1: 166fb523e3bb6941f19345bbb64b5bba02da3b22
SHA256: 11bb961e2e56acfb4fac8d446e4464365d01e8ad3141affbf4a70f8c7c728054
Section: devel
Priority: optional
Description: GTSAM
 # README - Georgia Tech Smoothing and Mapping Library
 .
 **Important Note**
 .
 As of Dec 2021, the `develop` branch is officially in &quot;Pre 4.2&quot; mode. A great new feature we will be adding in 4.2 is *hybrid inference* a la DCSLAM (Kevin Doherty et al) and we envision several API-breaking changes will happen in the discrete folder.
 .
 In addition, features deprecated in 4.1 will be removed. Please use the last [4.1.1 release](https://github.com/borglab/gtsam/releases/tag/4.1.1) if you need those features. However, most (not all, unfortunately) are easily converted and can be tracked down (in 4.1.1) by disabling the cmake flag `GTSAM_ALLOW_DEPRECATED_SINCE_V42`.
 .
 ## What is GTSAM?
 .
 GTSAM is a C++ library that implements smoothing and
 mapping (SAM) in robotics and vision, using Factor Graphs and Bayes
 Networks as the underlying computing paradigm rather than sparse
 matrices.
 .
 The current support matrix is:
 .
 | Platform     | Compiler  | Build Status  |
 |:------------:|:---------:|:-------------:|
 | Ubuntu 18.04 | gcc/clang | ![Linux CI](https://github.com/borglab/gtsam/workflows/Linux%20CI/badge.svg) |
 | macOS        | clang     | ![macOS CI](https://github.com/borglab/gtsam/workflows/macOS%20CI/badge.svg) |
 | Windows      | MSVC      | ![Windows CI](https://github.com/borglab/gtsam/workflows/Windows%20CI/badge.svg) |
 .
 .
 On top of the C++ library, GTSAM includes [wrappers for MATLAB &amp; Python](#wrappers).
 .
 .
 ## Quickstart
 .
 In the root library folder execute:
 .
 ```sh
 #!bash
 mkdir build
 cd build
 cmake ..
 make check (optional, runs unit tests)
 make install
 ```
 .
 Prerequisites:
 .
 - [Boost](http://www.boost.org/users/download/) &gt;= 1.65 (Ubuntu: `sudo apt-get install libboost-all-dev`)
 - [CMake](http://www.cmake.org/cmake/resources/software.html) &gt;= 3.0 (Ubuntu: `sudo apt-get install cmake`)
 - A modern compiler, i.e., at least gcc 4.7.3 on Linux.
 .
 Optional prerequisites - used automatically if findable by CMake:
 .
 - [Intel Threaded Building Blocks (TBB)](http://www.threadingbuildingblocks.org/) (Ubuntu: `sudo apt-get install libtbb-dev`)
 - [Intel Math Kernel Library (MKL)](http://software.intel.com/en-us/intel-mkl) (Ubuntu: [installing using APT](https://software.intel.com/en-us/articles/installing-intel-free-libs-and-python-apt-repo))
     - See [INSTALL.md](INSTALL.md) for more installation information
     - Note that MKL may not provide a speedup in all cases. Make sure to benchmark your problem with and without MKL.
 .
 ## GTSAM 4 Compatibility
 .
 GTSAM 4 introduces several new features, most notably Expressions and a Python toolbox. It also introduces traits, a C++ technique that allows optimizing with non-GTSAM types. That opens the door to retiring geometric types such as Point2 and Point3 to pure Eigen types, which we also do. A significant change which will not trigger a compile error is that zero-initializing of Point2 and Point3 is deprecated, so please be aware that this might render functions using their default constructor incorrect.
 .
  There is a flag `GTSAM_ALLOW_DEPRECATED_SINCE_V42` for newly deprecated methods since the 4.2 release, which is on by default, allowing anyone to just pull version 4.2 and compile.
 .
 .
 ## Wrappers
 .
 We provide support for [MATLAB](matlab/README.md) and [Python](python/README.md) wrappers for GTSAM. Please refer to the linked documents for more details.
 .
 ## Citation
 .
 If you are using GTSAM for academic work, please use the following citation:
 .
 ```bibtex
 @software{gtsam,
   author       = {Frank Dellaert and GTSAM Contributors},
   title        = {borglab/gtsam},
   month        = May,
   year         = 2022,
   publisher    = {Georgia Tech Borg Lab},
   version      = {4.2a8},
   doi          = {10.5281/zenodo.5794541},
   url          = {https://github.com/borglab/gtsam)}}
 }
 ```
 .
 To cite the `Factor Graphs for Robot Perception` book, please use:
 ```bibtex
 @book{factor_graphs_for_robot_perception,
     author={Frank Dellaert and Michael Kaess},
     year={2017},
     title={Factor Graphs for Robot Perception},
     publisher={Foundations and Trends in Robotics, Vol. 6},
     url={http://www.cs.cmu.edu/~kaess/pub/Dellaert17fnt.pdf}
 }
 ```
 .
 If you are using the IMU preintegration scheme, please cite:
 ```bibtex
 @book{imu_preintegration,
     author={Christian Forster and Luca Carlone and Frank Dellaert and Davide Scaramuzza},
     title={IMU preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation},
     year={2015}
 }
 ```
 .
 .
 ## The Preintegrated IMU Factor
 .
 GTSAM includes a state of the art IMU handling scheme based on
 .
 - Todd Lupton and Salah Sukkarieh, _&quot;Visual-Inertial-Aided Navigation for High-Dynamic Motion in Built Environments Without Initial Conditions&quot;_, TRO, 28(1):61-76, 2012. [[link]](https://ieeexplore.ieee.org/document/6092505)
 .
 Our implementation improves on this using integration on the manifold, as detailed in
 .
 - Luca Carlone, Zsolt Kira, Chris Beall, Vadim Indelman, and Frank Dellaert, _&quot;Eliminating conditionally independent sets in factor graphs: a unifying perspective based on smart factors&quot;_, Int. Conf. on Robotics and Automation (ICRA), 2014. [[link]](https://ieeexplore.ieee.org/abstract/document/6907483)
 - Christian Forster, Luca Carlone, Frank Dellaert, and Davide Scaramuzza, _&quot;IMU Preintegration on Manifold for Efficient Visual-Inertial Maximum-a-Posteriori Estimation&quot;_, Robotics: Science and Systems (RSS), 2015. [[link]](http://www.roboticsproceedings.org/rss11/p06.pdf)
 .
 If you are using the factor in academic work, please cite the publications above.
 .
 In GTSAM 4 a new and more efficient implementation, based on integrating on the NavState tangent space and detailed in [this document](doc/ImuFactor.pdf), is enabled by default. To switch to the RSS 2015 version, set the flag `GTSAM_TANGENT_PREINTEGRATION` to OFF.
 .
 .
 ## Additional Information
 .
 There is a [`GTSAM users Google group`](https://groups.google.com/forum/#!forum/gtsam-users) for general discussion.
 .
 Read about important [`GTSAM-Concepts`](GTSAM-Concepts.md) here. A primer on GTSAM Expressions,
 which support (superfast) automatic differentiation,
 can be found on the [GTSAM wiki on BitBucket](https://bitbucket.org/gtborg/gtsam/wiki/Home).
 .
 See the [`INSTALL`](INSTALL.md) file for more detailed installation instructions.
 .
 GTSAM is open source under the BSD license, see the [`LICENSE`](LICENSE) and [`LICENSE.BSD`](LICENSE.BSD) files.
 .
 Please see the [`examples/`](examples) directory and the [`USAGE`](USAGE.md) file for examples on how to use GTSAM.
 .
 GTSAM was developed in the lab of [Frank Dellaert](http://www.cc.gatech.edu/~dellaert) at the [Georgia Institute of Technology](http://www.gatech.edu), with the help of many contributors over the years, see [THANKS](THANKS.md).

Package: libgtsam-points-cuda12.5-dev
Version: 0.1.0
Architecture: amd64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 18754
Depends: libgtsam-notbb-dev, libboost-filesystem1.83.0 (>= 1.83.0), libc6 (>= 2.32), libgcc-s1 (>= 3.0), libgomp1 (>= 6), libstdc++6 (>= 13.1)
Filename: ./libgtsam-points-cuda12.5-dev_0.1.0_amd64.deb
Size: 4896486
MD5sum: 26be2de71e4f6d4c799658e4e3098899
SHA1: c6c079e31e21444c335dbcc9100af4bedec94937
SHA256: a8c0bc2c7ec9fb405dc12c4d12d4516f4cca11b2e5e38e8747d97bf48d8f3698
Section: devel
Priority: optional
Description: A collection of GTSAM factors for point cloud registration

Package: libgtsam-points-cuda12.5-dev
Version: 0.1.0
Architecture: arm64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 18529
Depends: libgtsam-notbb-dev, libboost-filesystem1.83.0 (>= 1.83.0), libc6 (>= 2.32), libgcc-s1 (>= 3.0), libgomp1 (>= 6), libstdc++6 (>= 13.1)
Filename: ./libgtsam-points-cuda12.5-dev_0.1.0_arm64.deb
Size: 4822926
MD5sum: a968a4d5a0acf7d6c0fdd7a1ba4cdda8
SHA1: 844dc2ed09e52428ffacbe4a24ddf1075a99f672
SHA256: 03d9313de5d769a95ab35078c4894f3053de1349bbb81a49dc70d8ae8b633800
Section: devel
Priority: optional
Description: A collection of GTSAM factors for point cloud registration

Package: libgtsam-points-dev
Version: 0.1.0
Architecture: arm64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 3485
Depends: libgtsam-notbb-dev, libboost-filesystem1.83.0 (>= 1.83.0), libc6 (>= 2.32), libgcc-s1 (>= 3.0), libgomp1 (>= 6), libstdc++6 (>= 13.1)
Filename: ./libgtsam-points-dev_0.1.0_arm64.deb
Size: 992828
MD5sum: 6990f05c2f2f22960b1bbed0358b639b
SHA1: a414406a03a13df38da6cd07c0e4cf9e3e68d45e
SHA256: 44f89fa5f1daea2fb499ea567938bae412be16fbb9c36af5d410624120b48b8b
Section: devel
Priority: optional
Description: A collection of GTSAM factors for point cloud registration

Package: libgtsam-points-dev
Version: 0.1.0
Architecture: amd64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 3677
Depends: libgtsam-notbb-dev, libboost-filesystem1.83.0 (>= 1.83.0), libc6 (>= 2.32), libgcc-s1 (>= 3.0), libgomp1 (>= 6), libstdc++6 (>= 13.1)
Filename: ./libgtsam-points-dev_0.1.0_amd64.deb
Size: 1051238
MD5sum: 8cbde987d5a0858422406a17f319e9d9
SHA1: f9dbb3b65cbb1481a5ae427df95e69ec77cebebb
SHA256: 80752fb18244f51cfe58ed1ea90f4facb096ac5f2e1dc97ffaeaac7fb9c7c59d
Section: devel
Priority: optional
Description: A collection of GTSAM factors for point cloud registration

Package: libiridescence-dev
Version: 0.1.1
Architecture: arm64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 10337
Depends: libc6 (>= 2.38), libgcc-s1 (>= 3.0), libglfw3 (>= 3.3), libjpeg8 (>= 8c), libpng16-16t64 (>= 1.6.2), libstdc++6 (>= 13.1)
Filename: ./libiridescence-dev_0.1.1_arm64.deb
Size: 3185348
MD5sum: 15893edea824474e5a9ef85eceedb39f
SHA1: 25e30c69a0269117e3c5fe81ee3a762798c9c957
SHA256: c02c0ad6c242042b957c0d06b4ac3f0e7c3f6592b099a9164535084d20fde1d6
Section: devel
Priority: optional
Description: 3D visualization library for rapid prototyping of 3D algorithms

Package: libiridescence-dev
Version: 0.1.1
Architecture: amd64
Maintainer: k.koide <k.koide@aist.go.jp>
Installed-Size: 10962
Depends: libc6 (>= 2.38), libgcc-s1 (>= 3.0), libglfw3 (>= 3.3), libjpeg8 (>= 8c), libpng16-16t64 (>= 1.6.2), libstdc++6 (>= 13.1)
Filename: ./libiridescence-dev_0.1.1_amd64.deb
Size: 3350276
MD5sum: 0170bdafb0a33744171a552f51ee549e
SHA1: f09e686fa4a49381d1153ba0c95b7f0031720f4f
SHA256: 729b472aa50e7e4bb151efbebd6db52fd1f9d63d19d11a1ed511cf8c92ebbac2
Section: devel
Priority: optional
Description: 3D visualization library for rapid prototyping of 3D algorithms

